{"version":3,"sources":["redux/types/index.js","utils/consts.js","redux/reducers/gameFieldReducer.js","redux/store.js","images/like.svg","images/dislike.svg","redux/actions/index.js","components/Tiles/Tile/Tile.jsx","components/Tiles/Tiles.jsx","components/Arrows/Arrow/Arrow.jsx","components/Arrows/Arrows.jsx","components/Popup/Popup.jsx","components/App.jsx","index.jsx"],"names":["SET_GAME_STATE","TOGGLE_POPUP","SET_GAME_STATUS","TOGGLE_CLICKABLE","randomizeDirection","directions","Math","floor","random","length","GAME_STATUS","HARD_LEVEL","moves","rows","columns","EASY_LEVEL","MEDIUM_LEVEL","INITIAL_STATE","moveHistory","countDown","tiles","selectedPosition","finishPosition","startPosition","popupOpened","gameStatus","isClickable","gameFieldReducer","state","action","type","payload","currentGameStatus","store","createStore","composeWithDevTools","applyMiddleware","thunk","setGameStatus","currentSelectedPosition","startGame","minInt","maxInt","min","ceil","max","getRandomInt","countLimit","i","move","push","getMoveHistoryAndFinishPosition","togglePopup","toggleClickable","Tile","position","useSelector","dispatch","useDispatch","className","onClick","pos","setTimeout","src","dislike","alt","like","Tiles","tilesData","Array","fill","map","_item","index","Arrow","direction","width","height","xmlns","d","Arrows","useState","arrows","setArrows","useEffect","arrowElement","Popup","memo","handleDifficultyAndClose","App","ReactDOM","render","Store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eab0a3bf.chunk.js","sourcesContent":["export const SET_GAME_STATE = 'SET_GAME_STATE';\nexport const TOGGLE_POPUP = 'TOGGLE_POPUP';\nexport const SET_GAME_STATUS = 'SET_GAME_STATUS';\nexport const TOGGLE_CLICKABLE = 'TOGGLE_CLICKABLE';\n","export const INITIAL_ROWS = 3;\nexport const INITIAL_COLUMNS = 3;\nexport const INITIAL_MOVES = 10;\nexport const INITIAL_COUNTDOWN = 1500;\n\nexport const getRandomInt = (minInt, maxInt) => {\n  const min = Math.ceil(minInt);\n  const max = Math.floor(maxInt);\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const randomizeDirection = () => {\n  const directions = ['up', 'right', 'down', 'left'];\n  return directions[Math.floor(Math.random() * directions.length)];\n};\n\nexport const GAME_STATUS = {\n  started: null,\n  win: 'win',\n  lose: 'lose',\n};\n\nexport const HARD_LEVEL = {\n  moves: 15,\n  rows: 4,\n  columns: 4,\n};\n\nexport const EASY_LEVEL = {\n  moves: 10,\n  rows: 3,\n  columns: 3,\n};\n\nexport const MEDIUM_LEVEL = {\n  moves: 15,\n  rows: 3,\n  columns: 3,\n};\n\nexport const getTilesNumber = (rows, columns) => rows * columns;\n\nexport const getMoveHistoryAndFinishPosition = ({\n  startPosition,\n  rows,\n  columns,\n  tiles,\n  moves,\n}) => {\n  let finishPosition = startPosition;\n  let countLimit = moves;\n  const moveHistory = [];\n  for (let i = 1; i <= countLimit; i++) {\n    const move = randomizeDirection();\n    switch (move) {\n      case 'up':\n        if (finishPosition > rows) {\n          moveHistory.push(move);\n          finishPosition -= rows;\n        } else {\n          countLimit++;\n        }\n        break;\n      case 'down':\n        if (finishPosition <= tiles - rows) {\n          moveHistory.push(move);\n          finishPosition += rows;\n        } else {\n          countLimit++;\n        }\n        break;\n      case 'right':\n        if (finishPosition % columns !== 0) {\n          moveHistory.push(move);\n          finishPosition += 1;\n        } else {\n          countLimit++;\n        }\n        break;\n      case 'left':\n        if (finishPosition % columns !== 1) {\n          moveHistory.push(move);\n          finishPosition -= 1;\n        } else {\n          countLimit++;\n        }\n        break;\n    }\n  }\n  return { moveHistory, finishPosition };\n};\n","import {\n  SET_GAME_STATE,\n  SET_GAME_STATUS,\n  TOGGLE_POPUP,\n  TOGGLE_CLICKABLE,\n} from '../types';\n\nimport {\n  INITIAL_MOVES,\n  INITIAL_ROWS,\n  INITIAL_COLUMNS,\n  INITIAL_COUNTDOWN,\n  GAME_STATUS,\n} from '../../utils/consts';\n\nconst INITIAL_STATE = {\n  moveHistory: [], // ['left', 'up']\n  moves: INITIAL_MOVES,\n  rows: INITIAL_ROWS,\n  columns: INITIAL_COLUMNS,\n  countDown: INITIAL_COUNTDOWN,\n  tiles: 0,\n  selectedPosition: null,\n  finishPosition: null,\n  startPosition: null,\n  popupOpened: false,\n  gameStatus: GAME_STATUS.started,\n  isClickable: false,\n};\n\nconst gameFieldReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_GAME_STATE: {\n      const {\n        payload: {\n          moveHistory,\n          startPosition,\n          finishPosition,\n          tiles,\n        },\n      } = action;\n      return {\n        ...state,\n        moveHistory,\n        startPosition,\n        finishPosition,\n        tiles,\n      };\n    }\n\n    case SET_GAME_STATUS: {\n      const {\n        payload: {\n          selectedPosition,\n        },\n      } = action;\n      let currentGameStatus;\n      if (selectedPosition === null) {\n        currentGameStatus = GAME_STATUS.started;\n      } else if (selectedPosition === state.finishPosition) {\n        currentGameStatus = GAME_STATUS.win;\n      } else {\n        currentGameStatus = GAME_STATUS.lose;\n      }\n      return {\n        ...state,\n        gameStatus: currentGameStatus,\n        selectedPosition,\n      };\n    }\n\n    case TOGGLE_POPUP: {\n      return {\n        ...state,\n        popupOpened: !state.popupOpened,\n      };\n    }\n\n    case TOGGLE_CLICKABLE: {\n      return {\n        ...state,\n        isClickable: !state.isClickable,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default gameFieldReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport gameFieldReducer from './reducers/gameFieldReducer';\n\nconst store = createStore(gameFieldReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/like.4f954970.svg\";","export default __webpack_public_path__ + \"static/media/dislike.99ef78fa.svg\";","import {\n  getMoveHistoryAndFinishPosition,\n  getRandomInt,\n} from '../../utils/consts';\n\nimport {\n  SET_GAME_STATE,\n  TOGGLE_POPUP,\n  TOGGLE_CLICKABLE,\n  SET_GAME_STATUS,\n} from '../types';\n\nexport const setGameStatus = (\n  currentSelectedPosition,\n) => ({\n  type: SET_GAME_STATUS,\n  payload: {\n    selectedPosition: currentSelectedPosition,\n  },\n});\n\nexport const startGame = ({\n  moves,\n  rows,\n  columns,\n}) => {\n  const tiles = rows * columns;\n  const startPosition = getRandomInt(1, tiles);\n  const {\n    moveHistory,\n    finishPosition,\n  } = getMoveHistoryAndFinishPosition({\n    startPosition,\n    rows,\n    columns,\n    tiles,\n    moves,\n  });\n  return {\n    type: SET_GAME_STATE,\n    payload: {\n      moveHistory,\n      finishPosition,\n      tiles,\n      startPosition,\n    },\n  };\n};\n\nexport const togglePopup = () => ({\n  type: TOGGLE_POPUP,\n});\n\nexport const toggleClickable = () => ({\n  type: TOGGLE_CLICKABLE,\n});\n","import React from 'react';\nimport './Tile.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport like from '../../../images/like.svg';\nimport dislike from '../../../images/dislike.svg';\nimport { GAME_STATUS } from '../../../utils/consts';\nimport {\n  togglePopup,\n  toggleClickable,\n  setGameStatus,\n} from '../../../redux/actions';\n\nconst Tile = ({ position }) => {\n  const {\n    startPosition,\n    finishPosition,\n    selectedPosition,\n    gameStatus,\n  } = useSelector((\n    state,\n  ) => ({\n    startPosition: state.startPosition,\n    finishPosition: state.finishPosition,\n    selectedPosition: state.selectedPosition,\n    gameStatus: state.gameStatus,\n  }));\n\n  const dispatch = useDispatch();\n\n  const handleTileClick = (pos) => {\n    dispatch(toggleClickable());\n    dispatch(setGameStatus(pos));\n    setTimeout(() => dispatch(togglePopup()), 2000);\n  };\n\n  return (\n    <li className=\"Tile\">\n      <button\n        type=\"button\"\n        className=\"Tile__button focus-effect\"\n        onClick={() => handleTileClick(position)}\n      >\n        <p\n          className={`Tile__text\n          ${position === startPosition && position !== selectedPosition\n            ? (position === finishPosition && gameStatus !== GAME_STATUS.started\n              ? '' : 'Tile__text_start_vis')\n            : ''}`}\n        >\n          Старт\n        </p>\n        <p\n          className={`Tile__text\n          ${position === finishPosition && gameStatus === GAME_STATUS.lose\n            ? 'Tile__text_finish_vis' : ''}`}\n        >\n          Финиш\n        </p>\n        <img\n          className={`Tile__image\n          ${position !== finishPosition && position === selectedPosition\n          && gameStatus === GAME_STATUS.lose ? 'Tile__image_lose_vis' : ''}`}\n          src={dislike}\n          alt=\"поражение\"\n        />\n        <img\n          className={`Tile__image\n          ${position === finishPosition && position === selectedPosition\n          && gameStatus === GAME_STATUS.win ? 'Tile__image_win_vis' : ''}`}\n          src={like}\n          alt=\"победа\"\n        />\n      </button>\n    </li>\n  );\n};\n\nexport default Tile;\n","import React from 'react';\nimport './Tiles.css';\nimport { useSelector } from 'react-redux';\nimport Tile from './Tile/Tile';\n\nconst Tiles = () => {\n  const {\n    tiles,\n    isClickable,\n  } = useSelector((\n    state,\n  ) => ({\n    tiles: state.tiles,\n    isClickable: state.isClickable,\n  }));\n\n  const tilesData = Array(tiles).fill().map((_item, index) => index + 1);\n\n  return (\n    <ul\n      className={`Tiles${tiles === 16 ? ' Tiles_hard' : ''}${isClickable ? '' : ' Tiles_blocked'}`}\n    >\n      {tilesData.map((position) => (\n        <Tile key={position} position={position} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Tiles;\n","import React from 'react';\nimport './Arrow.css';\n\nconst Arrow = ({ direction }) => (\n  <li className={`Arrow Arrow_${direction}`}>\n    <svg\n      width=\"59\"\n      height=\"59\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M54.2808 33C54.2808 34.1046 53.3716 35\n         52.25 35H17.9464C23.7676 42.1112 27.6975\n         45.8639 34.2135 50.6464C35.1128 51.3064\n         35.2985 52.5594 34.6283 53.4451C33.9581\n         54.3308 32.6858 54.5137 31.7865 53.8537C23.9775\n         48.1223 19.6571 43.7223 12.148 34.2291C11.5878\n         33.5209 11.5754 32.532 12.1175 31.8104C18.6491\n         23.1171 22.776 18.4997 31.8178 12.1239C32.7297\n         11.4808 33.9982 11.6876 34.6512 12.5857C35.3041\n         13.4838 35.0941 14.7331 34.1822 15.3761C26.7381\n         20.6254 22.8627 24.5371 17.8191 31L52.25 31C53.3716\n         31 54.2808 31.8954 54.2808 33Z\"\n      />\n    </svg>\n  </li>\n);\n\nexport default Arrow;\n","import React, { useEffect, useState } from 'react';\nimport './Arrows.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Arrow from './Arrow/Arrow';\nimport { GAME_STATUS } from '../../utils/consts';\nimport {\n  toggleClickable,\n} from '../../redux/actions';\n\nconst Arrows = () => {\n  const {\n    countDown,\n    moveHistory,\n    gameStatus,\n  } = useSelector((\n    state,\n  ) => ({\n    countDown: state.countDown,\n    moveHistory: state.moveHistory,\n    gameStatus: state.gameStatus,\n  }));\n  const dispatch = useDispatch();\n\n  const [arrows, setArrows] = useState([]);\n\n  useEffect(() => {\n    if (gameStatus === GAME_STATUS.started) {\n      setArrows([]);\n    }\n  }, [gameStatus]);\n\n  useEffect(() => {\n    if (arrows.length < moveHistory.length) {\n      setTimeout(() => {\n        const arrowElement = (<Arrow direction={moveHistory[arrows.length]} key={arrows.length} />);\n        setArrows([...arrows, arrowElement]);\n        if (arrows.length === moveHistory.length - 1) {\n          dispatch(toggleClickable());\n        }\n      }, countDown);\n    }\n  }, [arrows]);\n\n  return (\n    <ul className=\"Arrows\">\n      {arrows}\n    </ul>\n  );\n};\n\nexport default Arrows;\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Popup.css';\nimport {\n  startGame,\n  togglePopup,\n  setGameStatus,\n} from '../../redux/actions';\nimport { HARD_LEVEL, MEDIUM_LEVEL, EASY_LEVEL } from '../../utils/consts';\n\nconst Popup = memo(() => {\n  const { popupOpened, gameStatus } = useSelector((\n    state,\n  ) => ({ popupOpened: state.popupOpened, gameStatus: state.gameStatus }));\n  const dispatch = useDispatch();\n  const handleDifficultyAndClose = ({ rows, columns, moves }) => {\n    dispatch(startGame({\n      moves,\n      rows,\n      columns,\n    }));\n    dispatch(setGameStatus(null));\n    dispatch(togglePopup());\n  };\n\n  return (\n    <div className={`Popup ${popupOpened ? 'Popup_opened' : ''}`}>\n      <h1 className=\"Popup__title\">{gameStatus === 'win' ? 'Победа!' : 'Поражение'}</h1>\n      <p className=\"Popup__subtitle\">Попробуйте еще раз:</p>\n      <ul className=\"Popup__restart-menu\">\n        <li className=\"Popup__restart-menu-item\">\n          <button\n            type=\"button\"\n            className=\"Popup__restart-menu-button focus-effect\"\n            onClick={() => handleDifficultyAndClose(EASY_LEVEL)}\n          >\n            Легко\n          </button>\n        </li>\n        <li className=\"Popup__restart-menu-item\">\n          <button\n            type=\"button\"\n            className=\"Popup__restart-menu-button focus-effect\"\n            onClick={() => handleDifficultyAndClose(MEDIUM_LEVEL)}\n          >\n            Средне\n          </button>\n        </li>\n        <li className=\"Popup__restart-menu-item\">\n          <button\n            type=\"button\"\n            className=\"Popup__restart-menu-button focus-effect\"\n            onClick={() => handleDifficultyAndClose(HARD_LEVEL)}\n          >\n            Сложно\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n});\n\nexport default Popup;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Tiles from './Tiles/Tiles';\nimport Arrows from './Arrows/Arrows';\nimport Popup from './Popup/Popup';\nimport {\n  INITIAL_ROWS,\n  INITIAL_COLUMNS,\n  INITIAL_MOVES,\n  INITIAL_COUNTDOWN,\n  GAME_STATUS,\n} from '../utils/consts';\nimport { startGame } from '../redux/actions';\n\nconst App = () => {\n  const {\n    isClickable,\n    gameStatus,\n  } = useSelector((\n    state,\n  ) => ({\n    gameStatus: state.gameStatus,\n    isClickable: state.isClickable,\n  }));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(startGame({\n      moves: INITIAL_MOVES,\n      countDown: INITIAL_COUNTDOWN,\n      rows: INITIAL_ROWS,\n      columns: INITIAL_COLUMNS,\n    }));\n  }, []);\n\n  return (\n    <main className=\"App\">\n      <h1 className=\"App__title\">\n        Лабиринт\n      </h1>\n      <p className=\"App__subtitle\">\n        {isClickable ? 'Пришло время кликать'\n          : (gameStatus !== GAME_STATUS.started\n            ? 'Игра закончена' : 'Двигайся мысленно по стрелочкам.')}\n      </p>\n      <Tiles />\n      <Arrows />\n      <Popup />\n    </main>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport Store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}